/*Given a string s, find the length of the longest 
substring
 without repeating characters.

 

Example 1:

Input: s = "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.*/

class Solution {
    public int lengthOfLongestSubstring(String s) {
         int n = s.length();
        int maxLength = 0;
        HashMap<Character, Integer> charIndexMap = new HashMap<>();
        int leftPointer = 0;
        int rightPointer = 0;
        while (rightPointer < n) {
            char currentChar = s.charAt(rightPointer);
            if (!charIndexMap.containsKey(currentChar) || charIndexMap.get(currentChar) < leftPointer) {
                maxLength = Math.max(maxLength, rightPointer - leftPointer + 1);
            } 
            else
             {
                leftPointer = charIndexMap.get(currentChar) + 1;
            }
            charIndexMap.put(currentChar, rightPointer);
            rightPointer++;
        }

        return maxLength;
        
    }
}
